Lambda Functions in Python are anonymous functions, implying they don't have a name. 
The def keyword is needed to create a typical function in Python, as we already know. 
We can also use the lambda keyword in Python to define an unnamed function.

x => x+4 

test             =   lambda      x               :x + 4 
return variable  = <keyword>    <local var>     :<local var> + 4 


syntax:
lambda arguments: expression      

example:
test = lambda num: num + 4  
print( test(6) )  

Filter:
-------
The filter() method accepts two arguments in Python: a function and an iterable such as a list.
The function is called for every item of the list, and a new iterable or list is returned that holds just those elements that returned True when supplied to the function.
Here's a simple illustration of using the filter() method to return only odd numbers from a list.

list_ = [34, 12, 64, 55, 75, 13, 63]    
odd_list = list(filter( lambda num: (num % 2 != 0) , list_ ))  
print(odd_list)  

Map:
----
option1: 
numbers_list = [2, 4, 5, 1, 3, 7, 8, 9, 10]    
squared_list = list(map( lambda x: x ** 2 , numbers_list ))  
print( squared_list )  

oprtion2: 
squared_list = list(map( lambda x: x ** 2 ))  
squared_list([2, 4, 5, 1, 3, 7, 8, 9, 10])



Minimum = lambda x, y : x if (x < y) else y     
print(Minimum( 35, 74 ))  



